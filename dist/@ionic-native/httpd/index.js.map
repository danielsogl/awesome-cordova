{"version":3,"sources":["../../../src/@ionic-native/plugins/httpd/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAoB7C;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AASH,IAAa,KAAK;IAAS,yBAAiB;IAA5C;;IAiCA,CAAC;IA/BC;;;;OAIG;IAKH,2BAAW,GAAX,UAAY,OAAsB,IAAwB,MAAM,CAAC,CAAC,CAAC;IAEnE;;;OAGG;IAEH,sBAAM,GAAN,cAA4B,MAAM,CAAC,CAAC,CAAC;IAErC;;;QAGI;IAEJ,4BAAY,GAAZ,cAAkC,MAAM,CAAC,CAAC,CAAC;IAQ7C,YAAC;AAAD,CAjCA,AAiCC,CAjC0B,iBAAiB,GAiC3C;AANM,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AArBA;IAJC,OAAO,CAAC;QACP,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,YAAY;KAC5B,CAAC;;;oCACmC,UAAU;wCAAoB;AAOnE;IADC,OAAO,EAAE;;;;mCAC2B;AAOrC;IADC,OAAO,EAAE;;;;yCACiC;AAzBhC,KAAK;IARjB,MAAM,CAAC;QACN,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,sBAAsB;QAC9B,SAAS,EAAE,0BAA0B;QACrC,IAAI,EAAE,iDAAiD;QACvD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC;KACvC,CAAC;GAEW,KAAK,CAiCjB;SAjCY,KAAK","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface HttpdOptions {\n  /**\n   * The public root directory for your web server. This path is relative to your app's www directory.\n   * Default is current directory.\n   */\n  www_root?: string;\n  /**\n   * The port number to use.\n   * Default is 8888\n   */\n  port?: number;\n  /**\n   * Setting this option to false will allow remote access to your web server (over any IP).\n   * Default is false.\n   */\n  localhost_only?: boolean;\n}\n\n/**\n * @name Httpd\n * @description\n * Embedded httpd for Cordova apps. Light weight HTTP server.\n * @usage\n * ```typescript\n * import { Httpd, HttpdOptions } from '@ionic-native/httpd';\n *\n * constructor(private httpd: Httpd) { }\n *\n * ...\n *\n *\n * let options: HttpdOptions = {\n *      www_root: 'httpd_root', // relative path to app's www directory\n *      port: 80,\n *      localhost_only: false\n *  };\n *\n * this.httpd.startServer(options).subscribe((data) => {\n *  console.log('Server is live');\n * });\n *\n * ```\n * @interfaces\n * HttpdOptions\n */\n@Plugin({\n  pluginName: 'Httpd',\n  plugin: 'cordova-plugin-httpd',\n  pluginRef: 'cordova.plugins.CorHttpd',\n  repo: 'https://github.com/floatinghotpot/cordova-httpd',\n  platforms: ['Android', 'iOS', 'macOS']\n})\n\nexport class Httpd extends IonicNativePlugin {\n\n  /**\n   * Starts a web server.\n   * @param options {HttpdOptions}\n   * @returns {Observable<string>} Returns an Observable. Subscribe to receive the URL for your web server (if succeeded). Unsubscribe to stop the server.\n   */\n  @Cordova({\n    observable: true,\n    clearFunction: 'stopServer'\n  })\n  startServer(options?: HttpdOptions): Observable<string> { return; }\n\n  /**\n   * Gets the URL of the running server\n   * @returns {Promise<string>} Returns a promise that resolves with the URL of the web server.\n   */\n  @Cordova()\n  getUrl(): Promise<string> { return; }\n\n  /**\n   * Get the local path of the running webserver\n   * @returns {Promise<string>} Returns a promise that resolves with the local path of the web server.\n    */\n  @Cordova()\n  getLocalPath(): Promise<string> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}